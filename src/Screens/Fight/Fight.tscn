[gd_scene load_steps=7 format=2]

[ext_resource path="res://Things/Die/Die.tscn" type="PackedScene" id=1]
[ext_resource path="res://Screens/Fight/Fight.gd" type="Script" id=2]

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

uniform float size_x = 0.008;
uniform float size_y = 0.008;

void fragment() {
	vec2 uv = SCREEN_UV;
	uv -= mod(uv, vec2(size_x, size_y));

	COLOR.rgb = textureLod(SCREEN_TEXTURE, uv, 0.0).rgb;
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/size_x = 0.003
shader_param/size_y = 0.003

[sub_resource type="Shader" id=1]
code = "//---CRT Shader---
shader_type canvas_item;

uniform float scanline_count : hint_range(0, 1800) = 50.0;

vec2 uv_curve(vec2 uv)
{
	uv = (uv - 0.5) * 2.0;
	
	//You can modify the numbers and try different values
	uv.x *= 1.0 + pow(abs(uv.y) / 7.0, 2.0);
	uv.y *= 1.0 + pow(abs(uv.x) / 7.0, 2.0);
	
	//The scale part (you can delete it when you want)
	uv /= 1.0;
	
	uv = (uv/2.0) + 0.5;
	return uv;
}


void fragment()
{	
	float PI = 3.14159;
	
	//You can modify the *3.0, *-3.0 for a bigger or smaller 
	float r = texture(SCREEN_TEXTURE, uv_curve(SCREEN_UV) + vec2(SCREEN_PIXEL_SIZE.x*0.0), 0.0).r;
	float g = texture(SCREEN_TEXTURE, uv_curve(SCREEN_UV) + vec2(SCREEN_PIXEL_SIZE.x*.5), 0.0).g;
	float b = texture(SCREEN_TEXTURE, uv_curve(SCREEN_UV) + vec2(SCREEN_PIXEL_SIZE.x*-.5), 0.0).b;
	
	
	//If you dont want scanlines you can just delete this part
	float s = sin(uv_curve(SCREEN_UV).y * scanline_count * PI * 2.0);
	s = (s * 0.5 + 0.5) * 0.9 + 0.1;
	vec4 scan_line = vec4(vec3(pow(s, 0.1)), 1.0);
	
	
	COLOR = vec4(r, g, b, 1.0) * scan_line;
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/scanline_count = 150.0

[node name="Fight" type="Node2D"]
script = ExtResource( 2 )

[node name="Die" parent="." instance=ExtResource( 1 )]
position = Vector2( 259.475, 302.304 )

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="Shaders" type="Control" parent="CanvasLayer"]
visible = false
margin_right = 40.0
margin_bottom = 40.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="BackBufferCopy2" type="BackBufferCopy" parent="CanvasLayer/Shaders"]
position = Vector2( 175.363, 537.401 )
scale = Vector2( 2.75363, 6.37401 )
copy_mode = 2
rect = Rect2( 0, 0, 200, 200 )

[node name="PixelShader" type="ColorRect" parent="CanvasLayer/Shaders/BackBufferCopy2"]
material = SubResource( 4 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -69.0
margin_top = -87.0
margin_right = 4.0
margin_bottom = -81.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="BackBufferCopy" type="BackBufferCopy" parent="CanvasLayer/Shaders"]
position = Vector2( 4.2428, 1.41425 )
scale = Vector2( 3.54558, 6.38815 )
copy_mode = 2
rect = Rect2( 0, 0, 200, 200 )

[node name="VCRShader" type="ColorRect" parent="CanvasLayer/Shaders/BackBufferCopy"]
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -9.0
margin_right = 8.0
__meta__ = {
"_edit_use_anchors_": false
}
